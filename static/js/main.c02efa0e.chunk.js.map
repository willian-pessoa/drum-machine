{"version":3,"sources":["audiobank.js","App.js","reportWebVitals.js","index.js"],"names":["bankOne","keyCode","keyTrigger","id","url","Display","soundS","Pad","clip","volume","setSoundsS","React","useState","active","setActive","useEffect","document","addEventListener","handleKeyPress","removeEventListener","event","playSound","audioTag","getElementById","setTimeout","currentTime","play","onClick","className","src","App","setVolume","setSoundS","audioClips","map","type","step","value","onChange","target","max","min","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iMAAaA,G,MAAU,CACnB,CACEC,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,4DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,4DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,4DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,8DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,OACJC,IAAK,4DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,UACJC,IAAK,0DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,cACJC,IAAK,8DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,OACJC,IAAK,8DAEP,CACEH,QAAS,GACTC,WAAY,IACZC,GAAI,YACJC,IAAK,4D,OCtBX,SAASC,EAAT,GAA2B,IAATC,EAAQ,EAARA,OAChB,OACE,yCAAYA,KAIhB,SAASC,EAAT,GAAyC,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,WAE1B,EAA4BC,IAAMC,UAAS,GAA3C,mBAAOC,EAAP,KAAeC,EAAf,KAEAH,IAAMI,WAAU,WAEd,OADAC,SAASC,iBAAiB,UAAWC,GAC9B,WACLF,SAASG,oBAAoB,UAAWD,MAEzC,IAEH,IAAMA,EAAiB,SAACE,GAClBA,EAAMnB,UAAYO,EAAKP,SACzBoB,KAIEA,EAAY,WAChB,IAAMC,EAAWN,SAASO,eAAef,EAAKN,YAC9CY,GAAU,GACVU,YAAW,kBAAMV,GAAU,KAAQ,KACnCQ,EAASb,OAASA,EAClBa,EAASG,YAAc,EACvBH,EAASI,OACTrB,EAAQG,GACRE,EAAWF,EAAKL,KAGlB,OACE,sBAAKwB,QAASN,EAAWO,UAAS,oCAA+Bf,GAAU,eAA3E,UACE,uBAAOV,GAAIK,EAAKN,WAAY2B,IAAKrB,EAAKJ,MACrCI,EAAKN,cAMG4B,MAtEf,WAEE,MAA4BnB,IAAMC,SAAS,GAA3C,mBAAOH,EAAP,KAAesB,EAAf,KACA,EAA4BpB,IAAMC,SAAS,aAA3C,mBAAON,EAAP,KAAe0B,EAAf,KAEA,OACE,qBAAKJ,UAAU,gCAAf,SACE,qBAAKA,UAAU,OAAf,SACA,sBAAKzB,GAAG,eAAeyB,UAAU,cAAjC,UACA,8CACCK,EAAWC,KAAI,SAAA1B,GACd,OAAO,cAACD,EAAD,CAAKC,KAAMA,EAAoBC,OAAQA,EAAQC,WAAYsB,GAArCxB,EAAKL,OAEpC,uBACA,qBAAKA,GAAG,UAAR,SAAkB,cAACE,EAAD,CAASC,OAAQA,MACnC,uBACA,sBAAKH,GAAG,SAAR,UACA,wCACA,uBAAOgC,KAAK,QAAQC,KAAK,MAAMC,MAAO5B,EAAQ6B,SAAU,SAAClB,GAAD,OAAWW,EAAUX,EAAMmB,OAAOF,QAAQG,IAAI,IAAIC,IAAI,IAAIb,UAAU,SAC5H,4BAAInB,eCXKiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASO,eAAe,SAM1BmB,K","file":"static/js/main.c02efa0e.chunk.js","sourcesContent":["export const bankOne = [\r\n    {\r\n      keyCode: 81,\r\n      keyTrigger: 'Q',\r\n      id: 'Heater-1',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\r\n    },\r\n    {\r\n      keyCode: 87,\r\n      keyTrigger: 'W',\r\n      id: 'Heater-2',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\r\n    },\r\n    {\r\n      keyCode: 69,\r\n      keyTrigger: 'E',\r\n      id: 'Heater-3',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\r\n    },\r\n    {\r\n      keyCode: 65,\r\n      keyTrigger: 'A',\r\n      id: 'Heater-4',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\r\n    },\r\n    {\r\n      keyCode: 83,\r\n      keyTrigger: 'S',\r\n      id: 'Clap',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\r\n    },\r\n    {\r\n      keyCode: 68,\r\n      keyTrigger: 'D',\r\n      id: 'Open-HH',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\r\n    },\r\n    {\r\n      keyCode: 90,\r\n      keyTrigger: 'Z',\r\n      id: \"Kick-n'-Hat\",\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\r\n    },\r\n    {\r\n      keyCode: 88,\r\n      keyTrigger: 'X',\r\n      id: 'Kick',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\r\n    },\r\n    {\r\n      keyCode: 67,\r\n      keyTrigger: 'C',\r\n      id: 'Closed-HH',\r\n      url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\r\n    }\r\n  ];\r\n  ","import React from 'react';\nimport './App.css';\nimport {bankOne as audioClips} from \"./audiobank.js\"\n\nfunction App() {\n\n  const [volume, setVolume] = React.useState(1);\n  const [soundS, setSoundS] = React.useState(\"Press Key\");\n\n  return (\n    <div className=\"bg-info min-vh-100 text-white\">\n      <div className=\"Drum\">\n      <div id=\"drum-machine\" className=\"text-center\">\n      <h2>Drum Machine</h2>\n      {audioClips.map(clip => {\n        return <Pad clip={clip} key={clip.id} volume={volume} setSoundsS={setSoundS}/>\n      })}\n      <br />\n      <div id=\"display\"><Display soundS={soundS}/></div>\n      <br />\n      <div id=\"volume\">\n      <h4>Volume</h4>\n      <input type=\"range\" step=\"0.1\" value={volume} onChange={(event) => setVolume(event.target.value)} max=\"1\" min=\"0\" className=\"w-50\" />\n      <p>{volume}</p>\n      </div>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Display({soundS}){\n  return(\n    <h3>Sound: {soundS}</h3>\n  );\n}\n\nfunction Pad({clip, volume, setSoundsS}){\n\n  const [active, setActive] = React.useState(false);\n\n  React.useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, []);\n\n  const handleKeyPress = (event) => {\n    if (event.keyCode === clip.keyCode){\n      playSound();\n    }\n  };\n\n  const playSound = () => {\n    const audioTag = document.getElementById(clip.keyTrigger);\n    setActive(true);\n    setTimeout(() => setActive(false), 200);\n    audioTag.volume = volume;\n    audioTag.currentTime = 0;\n    audioTag.play();\n    Display(clip);\n    setSoundsS(clip.id);\n  };\n\n  return (\n    <div onClick={playSound} className={`btn btn-secondary p-4 m-3 ${active && \"btn-warning\"}`}>\n      <audio id={clip.keyTrigger} src={clip.url} />\n      {clip.keyTrigger}\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}